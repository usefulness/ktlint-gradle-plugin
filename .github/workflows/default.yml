name: Build Project

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      ktlint_version:
        description: 'ktlint version. e.g. 2.3.4-SNAPSHOT'
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    name: '[${{ matrix.os }}] build plugin'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Write Gradle build properties to `~/.gradle/gradle.properties`
        run: |
          mkdir -p ~/.gradle
          printf "org.gradle.jvmargs=-Xmx3G -XX:+UseParallelGC\n" >> ~/.gradle/gradle.properties
          printf "org.gradle.vfs.watch=false\n" >> ~/.gradle/gradle.properties
        shell: bash

      - run: sed -i -E 's/maven-ktlint = "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+"+/maven-ktlint = "${{ inputs.ktlint_version }}"/g' gradle/libs.versions.toml
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 24

      - uses: gradle/actions/setup-gradle@v5

      - run: ./gradlew assemble

      - run: ./gradlew check

      - run: ./gradlew publishToMavenLocal

      - run: ./gradlew publishPlugins -m

      - run: git diff --exit-code
        if: ${{ github.event_name != 'workflow_dispatch' }}

      - uses: actions/upload-artifact@v5
        if: ${{ always() }}
        with:
          name: test-results-${{ matrix.os }}
          path: "${{ github.workspace }}/**/build/reports/tests"

  integration-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        gradle: [ current, release-candidate ]
        java: [ 21, 24 ]
        include:
          - os: ubuntu-latest
            gradle: 8.5
            java: 17
          - os: windows-latest
            gradle: 8.5
            java: 17

    name: '[${{ matrix.os }}] Gradle: ${{ matrix.gradle }}, Java: ${{ matrix.java }}'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Write Gradle build properties to `~/.gradle/gradle.properties`
        run: |
          mkdir -p ~/.gradle
          printf "org.gradle.jvmargs=-Xmx3G -XX:+UseParallelGC\n" >> ~/.gradle/gradle.properties
          printf "org.gradle.vfs.watch=false\n" >> ~/.gradle/gradle.properties
        shell: bash

      - run: sed -i -E 's/maven-ktlint = "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+"+/maven-ktlint = "${{ inputs.ktlint_version }}"/g' gradle/libs.versions.toml
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: ${{ matrix.gradle }}
      
      - run: gradle lintKotlin --continue
        continue-on-error: true
        working-directory: test-project

      - name: Assert fixes
        run: |
          cd test-project/build/reports/ktlint
          grep 'no-empty-class-body' main-lint.txt | grep -q 'EmptyClassBodyClass.kt:3:27'
          grep 'op-spacing' test-lint.txt | grep -q 'OpSpacing.kt:5:16'
          if [ ${{ matrix.os }} == "windows-latest" ]; then
            echo "Windows can't delete files: https://github.com/gradle/gradle/issues/21964"
            gradle --stop     
          fi
        shell: bash

      - uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: ${{ matrix.gradle }}

      - run: gradle formatKotlin lintKotlin --stacktrace --no-build-cache
        working-directory: test-project
        
      - name: Upload reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v5
        with:
          name: "test-project-reports-${{ matrix.os }}-${{ matrix.gradle }}-${{ matrix.java }}"
          path: "${{ github.workspace }}/**/build/reports/ktlint"

  integration-tests-android:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gradle: [ current, release-candidate ]
        java: [ 24 ]
        agp: [ stable, alpha ]

    name: '[android] Gradle: ${{ matrix.gradle }}, Java: ${{ matrix.java }}, AGP: ${{ matrix.agp }}'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Write Gradle build properties to `~/.gradle/gradle.properties`
        run: |
          mkdir -p ~/.gradle
          printf "org.gradle.jvmargs=-Xmx3G -XX:+UseParallelGC\n" >> ~/.gradle/gradle.properties
          printf "org.gradle.vfs.watch=false\n" >> ~/.gradle/gradle.properties
        shell: bash

      - run: sed -i -E 's/maven-ktlint = "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+"+/maven-ktlint = "${{ inputs.ktlint_version }}"/g' gradle/libs.versions.toml
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - id: agp-version-finder
        uses: usefulness/agp-version-finder-action@v1
        with:
          version-to-resolve: ${{ matrix.agp }}

      - uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: ${{ matrix.gradle }}

      - run: gradle lintKotlin -PagpVersion=${{ steps.agp-version-finder.outputs.resolved-version }} --continue
        continue-on-error: true
        working-directory: test-project-android

      - name: Assert fixes
        run: |
          cd test-project-android/app/build/reports/ktlint
          grep 'no-empty-class-body' main-lint.txt | grep -q 'EmptyClassBodyClass.kt:3:27'
          grep 'no-empty-class-body' main-lint.txt | grep -q 'EmptyClassBodyInJavaSourcesClass.kt:3:40'
          grep 'op-spacing' test-lint.txt | grep -q 'OpSpacing.kt:5:16'
          grep 'no-newline-before-return-type' test-lint.txt | grep -q 'CustomRuleTest.kt:4:16'

      - uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: ${{ matrix.gradle }}

      - run: gradle formatKotlin lintKotlin -PagpVersion=${{ steps.agp-version-finder.outputs.resolved-version }} --no-build-cache
        working-directory: test-project-android

      - name: Upload reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v5
        with:
          name: "test-project-android-reports-${{ matrix.gradle }}-${{ matrix.java }}-${{ matrix.agp }}"
          path: "${{ github.workspace }}/**/build/reports/ktlint"
